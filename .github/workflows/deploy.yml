name: Deploy

on:
  workflow_call:

env:
  RESOURCE_NAME_COMMON_START: learn-workflows
  MAIN_REGION: westus2
  FREE_APP_SERVICE_PLAN_REGION: eastus
  STAGE: learn

jobs:
  update-infrastructure:
    name: Update Infrastructure
    runs-on: ubuntu-latest
    outputs:
      deploymentName: ${{ steps.create-resources.outputs.deploymentName }}
      resourceGroupName: ${{ steps.create-resources.outputs.resourceGroupName }}
      apiServiceName: ${{ steps.create-resources.outputs.apiServiceName }}
    steps:
      - name: ✔️ Checkout repo at triggering ref
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🔧 Install GitVersion
        if: github.ref != 'refs/heads/main'
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: '5.x'

      - name: 🏃 Execute GitVersion
        if: github.ref != 'refs/heads/main'
        uses: gittools/actions/gitversion/execute@v0.9.13
        with:
          useConfigFile: true

      - name: 📜 Set resource name common
        shell: bash
        run: |
          if [ $GITHUB_REF == 'refs/heads/main' ]; then
            resourceNameCommon=${{ env.RESOURCE_NAME_COMMON_START }}
          else
            resourceNameCommon=${{ env.RESOURCE_NAME_COMMON_START }}-${{ env.GitVersion_SemVer }}
          fi

          echo "RESOURCE_NAME_COMMON=$resourceNameCommon" >> $GITHUB_ENV

      - name: 🔑 Log in via Azure CLI using SP
        if: github.ref != 'refs/heads/main'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SECRET_GITHUBACTIONS_AZURESP_LEARN_FRONTDOOR1 }}

      - name: ☁️ Create resources
        id: create-resources
        shell: bash
        run: |

          . $GITHUB_WORKSPACE/.github/workflows/scripts/format-resource-name-common.sh

          formattedResourceNameCommon=$(getFormattedResourceNameCommon $RESOURCE_NAME_COMMON)
          deploymentName=$DEPLOYMENT_NAME_PREFIX-$GITVERSION_SEMVER

          az deployment sub create -l $MAIN_REGION -n $deploymentName --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --template-file infra/main.bicep --parameters deploymentNamePrefix=$DEPLOYMENT_NAME_PREFIX resourceNameCommonPart=$RESOURCE_NAME_COMMON resourceGroupLocation=$MAIN_REGION appPlanLocation=$FREE_APP_SERVICE_PLAN_REGION stage=$STAGE

          resourceGroupName=$(az deployment sub show -n $deploymentName --query properties.outputs.resourceGroupName.value -o tsv)
          apiServiceName=$(az deployment sub show -n $deploymentName --query properties.outputs.apiServiceName.value -o tsv)

          echo "::set-output name=deploymentName::$deploymentName"
          echo "::set-output name=resourceGroupName::$resourceGroupName"
          echo "::set-output name=apiServiceName::$apiServiceName"
        env:
          DEPLOYMENT_NAME_PREFIX: 'gha_${{ github.run_id }}'
          IS_MAIN: ${{ github.ref == 'refs/heads/main' }}

  deploy:
    runs-on: ubuntu-latest
    needs: update-infrastructure
    steps:
      - name: ⬇️ Download artifacts
        uses: actions/download-artifact@v3
        id: download
        with:
          name: artifact
          path: ./published

      - name: 🔑 Log in via Azure CLI using SP
        if: github.ref != 'refs/heads/main'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SECRET_GITHUBACTIONS_AZURESP_LEARN_FRONTDOOR1 }}

      - name: Download the API service's publishing profile
        id: az_apiservice_publishing_profile
        run: |
          echo "API_SERVICE_PUB_PROFILE=$(az webapp deployment list-publishing-profiles --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }} --resource-group ${{ env.RESOURCE_GROUP_NAME }} --name ${{ env.API_SERVICE_NAME }} --xml)" >> $GITHUB_ENV
        env:
          RESOURCE_GROUP_NAME: ${{ needs.update-infrastructure.outputs.resourceGroupName }}
          API_SERVICE_NAME: ${{ needs.update-infrastructure.outputs.apiServiceName }}

      - name: 🚀 Deploy API
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.API_SERVICE_NAME }}
          package: './published'
          publish-profile: ${{ env.API_SERVICE_PUB_PROFILE }}
